//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18063 版自动生成。
// 
#pragma warning disable 1591

namespace org.jiechan.service.cn.org.renzhe.u.member {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MemberSoap", Namespace="http://x3.renzhe.org/")]
    public partial class Member : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ValidateMysqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoitOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Member() {
            this.Url = global::org.jiechan.service.Properties.Settings.Default.org_renzhe_plat_service_cn_org_renzhe_u_member_Member;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ValidateMysqlCompletedEventHandler ValidateMysqlCompleted;
        
        /// <remarks/>
        public event LoginOutCompletedEventHandler LoginOutCompleted;
        
        /// <remarks/>
        public event DoitCompletedEventHandler DoitCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://x3.renzhe.org/ValidateMysql", RequestNamespace="http://x3.renzhe.org/", ResponseNamespace="http://x3.renzhe.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ValidateMysql([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] modelstr) {
            object[] results = this.Invoke("ValidateMysql", new object[] {
                        modelstr});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ValidateMysqlAsync(byte[] modelstr) {
            this.ValidateMysqlAsync(modelstr, null);
        }
        
        /// <remarks/>
        public void ValidateMysqlAsync(byte[] modelstr, object userState) {
            if ((this.ValidateMysqlOperationCompleted == null)) {
                this.ValidateMysqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateMysqlOperationCompleted);
            }
            this.InvokeAsync("ValidateMysql", new object[] {
                        modelstr}, this.ValidateMysqlOperationCompleted, userState);
        }
        
        private void OnValidateMysqlOperationCompleted(object arg) {
            if ((this.ValidateMysqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateMysqlCompleted(this, new ValidateMysqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://x3.renzhe.org/LoginOut", RequestNamespace="http://x3.renzhe.org/", ResponseNamespace="http://x3.renzhe.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoginOut(string username) {
            this.Invoke("LoginOut", new object[] {
                        username});
        }
        
        /// <remarks/>
        public void LoginOutAsync(string username) {
            this.LoginOutAsync(username, null);
        }
        
        /// <remarks/>
        public void LoginOutAsync(string username, object userState) {
            if ((this.LoginOutOperationCompleted == null)) {
                this.LoginOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOutOperationCompleted);
            }
            this.InvokeAsync("LoginOut", new object[] {
                        username}, this.LoginOutOperationCompleted, userState);
        }
        
        private void OnLoginOutOperationCompleted(object arg) {
            if ((this.LoginOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://x3.renzhe.org/Doit", RequestNamespace="http://x3.renzhe.org/", ResponseNamespace="http://x3.renzhe.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Doit() {
            this.Invoke("Doit", new object[0]);
        }
        
        /// <remarks/>
        public void DoitAsync() {
            this.DoitAsync(null);
        }
        
        /// <remarks/>
        public void DoitAsync(object userState) {
            if ((this.DoitOperationCompleted == null)) {
                this.DoitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoitOperationCompleted);
            }
            this.InvokeAsync("Doit", new object[0], this.DoitOperationCompleted, userState);
        }
        
        private void OnDoitOperationCompleted(object arg) {
            if ((this.DoitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateMysqlCompletedEventHandler(object sender, ValidateMysqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateMysqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateMysqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginOutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DoitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591